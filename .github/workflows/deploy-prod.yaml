name: Deploy to AWS EKS

on:
  workflow_dispatch:
    inputs:
      aws-region:
        description: 'AWS Region'
        required: true
        type: string
        default: 'us-east-1'
      aws-access-key-id:
        description: 'AWS Access Key ID'
        required: true
        type: string
      aws-secret-access-key:
        description: 'AWS Secret Access Key'
        required: true
        type: string
      aws-session-token:
        description: 'AWS Session Token'
        required: true
        type: string      

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -f ./devops/docker/dockerfile -t ${{ secrets.DOCKER_USERNAME }}/hacka-video-consumer:latest .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/hacka-video-consumer:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ github.event.inputs.aws-access-key-id }}
          aws-secret-access-key: ${{ github.event.inputs.aws-secret-access-key }}
          aws-session-token: ${{ github.event.inputs.aws-session-token }}
          aws-region: ${{ github.event.inputs.aws-region }}
          video-processing-queue-url: ${{ secrets.VIDEO_PROCESSING_QUEUE_URL }}
          notification-queue-url: ${{ secrets.NOTIFICATION_QUEUE_URL }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ github.event.inputs.aws-region }}

      - name: Create Kubernetes Secret
        run: |
          kubectl create secret generic hacka-video-secrets \
            --from-literal=AWS_REGION=${{ github.event.inputs.aws-region }} \
            --from-literal=AWS_ACCESS_KEY_ID=${{ github.event.inputs.aws-access-key-id }} \
            --from-literal=AWS_SECRET_ACCESS_KEY=${{ github.event.inputs.aws-secret-access-key }} \
            --from-literal=AWS_SESSION_TOKEN=${{ github.event.inputs.aws-session-token }} \
            --from-literal=VIDEO_PROCESSING_QUEUE_URL=${{ github.event.inputs.video-processing-queue-url }} \
            --from-literal=NOTIFICATION_QUEUE_URL=${{ github.event.inputs.notification-queue-url }} \
            --dry-run=client -o yaml | kubectl apply -f -
      
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f devops/k8s/

      - name: Restart Kubernetes Pods
        run: |
          kubectl rollout restart deployment/hacka-video-consumer-deployment

      - name: Verify deployment
        run: |
          kubectl rollout status deployment/hacka-video-consumer-deployment

      # - name: Install Terraform
      #   uses: hashicorp/setup-terraform@v2
      #   with:
      #     terraform_version: latest

      # - name: Initialize Terraform
      #   run: |
      #     terraform -chdir=devops/terraform init

      # - name: Apply Terraform changes
      #   run: |
      #     terraform -chdir=devops/terraform apply -auto-approve -no-color -compact-warnings
